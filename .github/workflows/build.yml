name: Build

on: [push]

env:
  CIBW_SKIP: pp* *-manylinux_i686 *-win32
  CIBW_BEFORE_BUILD: git submodule update --init --recursive
  CIBW_BEFORE_BUILD_MACOS: brew install libomp
  CIBW_TEST_COMMAND: cd {project} && python {project}/test.py && cd ..
  CIBW_ARCHS_LINUX: auto aarch64

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.8'

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==2.3.1
    - name: Build wheel
      run: |
        python -m cibuildwheel --output-dir dist
    - name: Look
      run: |
        ls dist
    - uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: ./dist

  build_source:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.8'
    
    - name: Build source
      run: |
        git submodule update --init --recursive
        python -m pip install setuptools wheel Cython>=3.0a9
        python setup.py sdist --formats=zip
    - uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: ./dist
  
  upload:
    runs-on: ubuntu-latest
    needs: [build_source, build_wheels]
    
    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: wheels
        path: ./dist
  
    - name: Upload to GitHub Releases
      uses: softprops/action-gh-release@v1
      if: startsWith(github.event.ref, 'refs/tags')
      with:
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      continue-on-error: true
      with:
        password: ${{ secrets.testpypi_password }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}